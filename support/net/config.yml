---
# WARNING: Before changing this file make sure the environment is down,
# otherwise the tool may lose track of the containers or assign IP addresses in
# a different order and it may interfere with tests.

# command-line flags that are passed to factomd during startup, you can
# specify a common value here and override it for particular nodes
flags: -sim_stdin=false

# List of factom nodes
nodes:
      # the name of the node, should be unique in the environment
    - name: node1
      # if true, the node address will be added to the list of
      # seeds available when factomd are starting, default: false
      seed: true
      # set a role for the node, by default each node is a
      # follower, but can be changed to leader or audit
      role: leader
      # port on the host machine where the UI for this node is exposed,
      # requires rebuilding images
      ui_port: 8090
      # port on the host machine where the API for this node is exposed,
      # requires rebuilding images
      api_port: 8088

      # override flags specified above for this node
      flags: -sim_stdin=false -loglvl=info

    - name: node2
      role: audit
      ui_port: 8190

    - name: node3


network:
    # Initial rules for the network, use it to set up the initial topology of
    # the network (nodes + seed_server).
    # By default all nodes are connected, you can use deny or allow rules to
    # override this. Rules are evaluated in order, so whenever a rule is matched
    # the processing is stopped. Note that the seed_server is considered a node
    # in the network, so blocking access for a node to the whole network means
    # that it will not be able to access the seed_server.
    #
    # Example:
    #
    # Given nodes: A, B, C and the following set of rules:
    #  - allow: B -> A
    #  - deny: * <-> A
    # will result in the following network:
    #  A <- B <-> C
    # (-> denotes a one-way connection and <-> a two-way connection).
    rules:
          # allow or deny
        - action: deny
          # a node name or "*" for the whole network
          source: node2
          # a node name or "*" for the whole network
          target: "*"
          # if true, the rule is applied one-way (source -> target), if false,
          # the rule is applied both ways (source <-> target), default: false
          one-way: true


        - action: deny
          source: node3
